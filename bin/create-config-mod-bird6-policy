#!/bin/bash 
get_ip6_policy_upstreams() {
  awk -F';' '/^#/ {next} {print $1}' ../conf/ip6_policy_nets | sort | uniq
}

get_ip6_policy_networks_for_upstream() {
  upstream=$1
  awk -F';' '/^#/ {next} $1 == "'$upstream'" {print $2}' ../conf/ip6_policy_nets
}

get_ip6_policy_exits_for_upstream() {
  upstream=$1
  awk -F';' '/^#/ {next} $1 == "'$upstream'" {print $2}' ../conf/ip6_policy_exit_routers
}

get_ip6_policy_table_id_for_upstream() {
  upstream=$1
  awk -F';' '/^#/ {next} $1 == "'$upstream'" {print $3}' ../conf/ip6_policy_nets
}

bird6_create_iproute_rt_table() {
  mkdir -p ../output/etc/iproute2/rt_tables.d/
  rm ../output/etc/iproute2/rt_tables.d/ffs_ip6_policy.conf
  get_ip6_policy_upstreams | while read upstream; do
    table_id=$(get_ip6_policy_table_id_for_upstream "$upstream")
    echo "${table_id} ${upstream}" >> ../output/etc/iproute2/rt_tables.d/ffs_ip6_policy.conf
  done
}

bird6_create_ip6_policy() {
  bird6_create_iproute_rt_table
  rm ../output/etc/bird/bird6_ffs_ipv6_policy.conf || true
  get_ip6_policy_upstreams | while read upstream; do
    table_id=$(get_ip6_policy_table_id_for_upstream "$upstream")
    cat <<-EOF >> ../output/etc/bird/bird6_ffs_ipv6_policy.conf
	table ${upstream};
	protocol static default_${upstream} {
	  table ${upstream};
EOF
    get_ip6_policy_exits_for_upstream "$upstream" | while read exit_host; do
      echo Generating config for $upstream exit $exit_host
      ip6_exit_offset=$(get_ip6_offset "$exit_host")
      ip6_exit="fd21:b4dc:4b00::a38:$ip6_exit_offset"
      echo "  route ::/0 recursive ${ip6_exit};" >> ../output/etc/bird/bird6_ffs_ipv6_policy.conf
    done
    cat <<-EOF >> ../output/etc/bird/bird6_ffs_ipv6_policy.conf
	}
	protocol pipe p_${upstream} {
	  peer table ${upstream};
	  import filter nodefaultroute;
	  export filter nodefaultroute;
	  mode transparent;
	}
	protocol kernel k_${upstream} {
	  table ${upstream};
	  kernel table ${table_id};
	  export all;
	  import none;
	  scan time 10;
	}
EOF
  done
}

bird6_create_policy_rule_script() {
  mkdir -p ../output/etc/ffs
  echo "/bin/sh" > ../output/etc/ffs/ip6-policy.sh
  get_ip6_policy_upstreams | while read upstream; do
    get_ip6_policy_networks_for_upstream "$upstream" | while read network; do
      echo "/sbin/ip -6 rule add from ${network} pref 10000 lookup ${upstream}" >> ../output/etc/ffs/ip6-policy.sh
    done
  done
  chmod +x ../output/etc/ffs/ip6-policy.sh

  bird6_create_policy_rule_script_unitfile
}

bird6_create_policy_rule_script_unitfile() {
  mkdir -p ../output/etc/systemd/system
  cat <<-EOF > ../output/etc/systemd/system/ffs-ip6-policy.service
	[Unit]
	Description=FFS IP6 Policy Source Routing Rules
	After=network.target

	[Service]
	Type=oneshot
	ExecStart=/etc/ffs/ip6-policy.sh

	[Install]
	WantedBy=multi-user.target
EOF
}

bird6_create_policy_rules() {
  bird6_create_policy_rule_script
  bird6_create_policy_rule_script_unitfile
}
