#!/bin/bash
wireguard_deploy_config() {
thisline=$1
sourceline=$2
targetline=$3
source=$(get_line_host $sourceline)
target=$(get_line_host $targetline)
offset=$(get_network_offset $sourceline $targetline)
offsetsrc=$(get_ip_offset $source)
offsetdst=$(get_ip_offset $target)
if [ $thisline == $sourceline ]; then
  ifacename=$sourceline$targetline
  remoteip=$(get_line_ip $targetline)
  localip=$(get_line_ip $sourceline)
  localif=$(get_line_interface $sourceline)
  localtunip=100.100.$offset.$offsetsrc
  localtun6ip="fd21:711:ffff:ffff::$offset:$offsetsrc:$offsetdst"
  remotetunip=100.100.$offset.$offsetdst
  remotetun6ip="fd21:711:ffff:ffff::$offset:$offsetdst:$offsetsrc"
  portsrc=$(printf "%i%03i" $((12+$offset)) $offsetdst)
  portdst=$(printf "%i%03i" $((12+$offset)) $offsetsrc)
  publickey=$(awk -F';' '{gsub(" ","")} $1 == "'$target'" {print $2}' ../conf/wireguard-pubkeys)
  if [ "x$publickey" == "x" ]; then
    error "Pubkey missing in ../conf/wireguard-pubkeys for $target $targetline"
  fi
else
  ifacename=$targetline$sourceline
  remoteip=$(get_line_ip $sourceline)
  if [ "x$remoteip" == "x-" ]; then remoteip=""; fi
  localip=$(get_line_ip $targetline)
  localif=$(get_line_interface $targetline)
  localtunip=100.100.$offset.$offsetdst
  localtun6ip="fd21:711:ffff:ffff::$offset:$offsetsrc:$offsetdst"
  remotetunip=100.100.$offset.$offsetsrc
  remotetun6ip="fd21:711:ffff:ffff::$offset:$offsetdst:$offsetsrc"
  publickey=$(awk -F';' '{gsub(" ","")} $1 == "'$source'" {print $2}' ../conf/wireguard-pubkeys)
  portsrc=$(printf "%i%03i" $((12+$offset)) $offsetsrc)
  portdst=$(printf "%i%03i" $((12+$offset)) $offsetdst)
  if [ "x$publickey" == "x" ]; then
    error "Pubkey missing in ../conf/wireguard-pubkeys for $source $sourceline"
  fi
fi
# Offset fÃ¼r mehrere Verbindungen pro GW-Paar
# port: nbbb, n=12+offset, bbb=offset Standort b
privatekey=$(cat /etc/wireguard/wg-private.key)
if [ "x$privatekey" == "x" ]; then
  error "please create /etc/wireguard/wg-private.key:
    wg genkey | tee /etc/wireguard/wg-private.key | wg pubkey > /etc/wireguard/wg-public.key"
fi
mkdir -p ../output/etc/wireguard
  cat <<-EOF >../output/etc/wireguard/$ifacename.conf
	[Interface]
	Table = off
	SaveConfig = false
	ListenPort = $portsrc
	PrivateKey = $privatekey
	PostUp = ip address add local $localtunip/32 remote $remotetunip/32 dev $ifacename
	PostUp = ip -6 address add local $localtun6ip/128 remote $remotetun6ip/128 dev $ifacename
	
	[Peer]
	PublicKey = $publickey
	AllowedIPs = 0.0.0.0/0
EOF
if [ x != x"$remoteip" ]; then
  echo "Endpoint = $remoteip:$portdst" >> ../output/etc/wireguard/$ifacename.conf
fi
# Add $remotetunip route to /etc/network/interfaces.d/$sourceline$targetline
mkdir -p ../output/etc/network/interfaces.d
      cat <<-EOF > ../output/etc/network/interfaces.d/$ifacename
	# Client OpenVPN
	iface $ifacename inet manual
	    pre-up wg-quick up $ifacename || true
	    pre-down wg-quick down $ifacename || true
EOF
}

wireguard_deploy() {
  local HOST=$1
  get_lines $HOST | while read line; do
    cat ../conf/tunnels | sed '/^#/d' | awk -F';' '$1 ~ /^[ \t]*'$line'$/ && $3 ~ /wireguard/ { print $2 }' |
    while read target_line; do
      wireguard_deploy_config $line $line $target_line
    done
  done
  get_lines $HOST | while read line; do
    cat ../conf/tunnels | sed '/^#/d' | awk -F';' '$2 ~ /^[ \t]*'$line'$/ && $3 ~ /wireguard/ { print $1 }' |
    while read target_line; do
      wireguard_deploy_config $line $target_line $line
    done
  done
}
